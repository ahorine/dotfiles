#!/usr/bin/env bash
#
# Install script for all configured dotfiles.
# This script is idempotent and can be run multiple times.
#
# If an existing (non-symlink) file is found, it will be backed up with a
# timestamped suffix and replaced with a symlink to the dotfile in this repo.
#

# For debugging
#set -x

# Get the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# All dotfiles to install
# Lines prefixed with '#' are ignored
# Format: <local path> <target path> <target name>
read -r -d '' DOTS <<EOF
tmux/tmux/.tmux.conf ${HOME}/.config/tmux tmux.conf
tmux/tmux.conf.local ${HOME}/.config/tmux tmux.conf.local
# temporary until the local plugin is moved to the plugin manager
tmux/plugins ${HOME}/.config/tmux local_plugins
nvim/vimrc ${HOME} .vimrc
nvim/nvim ${HOME}/.config nvim
zshrc ${HOME} .zshrc
starship.toml ${HOME}/.config starship.toml
alacritty.yml ${HOME}/.config/alacritty .alacritty.yml
# For some reason, alacritty isn't reading the config when it's in .config
alacritty.yml ${HOME} .alacritty.yml
EOF

printf "Installing dotfiles...\n"

# Install all dotfiles in the list above
while read -r line; do
  # Skip comments and empty lines
  [[ "$line" =~ ^\ *# ]] || [[ -z "$line" ]] && continue

  # Split line into vars
  read -r local_path target_path target_name <<< "$line"

  # If any of the paths are empty, skip this line
  [[ -z "${local_path}" ]] || [[ -z "${target_path}" ]] || [[ -z "${target_name}" ]] && continue

  # Complete the local path and full target path
  local_path="${DIR}/${local_path}"

  # Dump status
  printf "Installing %s to %s/%s\n" "${local_path}" "${target_path}" "${target_name}"

  # Create target directory if it doesn't exist
  mkdir -p "${target_path}"

  # If the target exists and is not a symlink, back it up
  if [[ -e "${target_path}/${target_name}" && ! -L "${target_path}/${target_name}" ]]; then
    backup_name="${target_name}.$(date +%Y%m%d%H%M%S)"
    printf "Backing up %s/%s to %s/%s\n" "${target_path}" "${target_name}" "${target_path}" "${backup_name}"
    mv "${target_path}/${target_name}" "${target_path}/${backup_name}"
  fi

  # Create symlink to local file
  ln -sf "${local_path}" "${target_path}/${target_name}"
done <<< "$DOTS"

# Dump advice to install other needed items
cat <<EOF

Done installing dotfiles!

You may need to install the following:
- zsh
- oh-my-zsh
- zsh-autosuggestions
- alacritty
- starship
- zoxide
- eza
- tmux
- neovim
- fzf

Some additional setup might be required for WSL2/Windows.

EOF

exit 0
